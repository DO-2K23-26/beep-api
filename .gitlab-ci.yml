stages:
  - test
  - build
  - deploy

include:
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - local: 'gitversion-ci-cd-plugin-extension.gitlab-ci.yml'

variables:
  VERSION: $CI_COMMIT_TAG

workflow:
  rules:
    # - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "merge_request_event"'
    # - if: '$CI_COMMIT_BRANCH == "feat/ci-environment"'
    #   variables:
    #     DEPLOY_VARIABLE: develop
    #     CHART_NAME: beep-api-develop
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH=="main"'
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+-staging$/'
      variables:
        DEPLOY_VARIABLE: staging
        CHART_NAME: beep-api-staging
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/'
      variables:
        DEPLOY_VARIABLE: production
        CHART_NAME: beep-api
    - if: '$CI_PIPELINE_SOURCE == "push"'

gemnasium-dependency_scanning:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_MERGE_REQUEST_IID

lint:
  stage: test
  image: node:18.17.1
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-9 --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - 'echo "VERSION: $VERSION"'
    - pnpm install
    - pnpm typecheck
    - pnpm lint

build-publish-image:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: ['']
  dependencies:
    - lint
    - gemnasium-dependency_scanning
  script:
    - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"username\":\"$USER_DOCKERHUB\",\"password\":\"$PASSWORD_DOCKERHUB\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination milou666/beep-api:$VERSION
  environment:
    name: $DEPLOY_VARIABLE

package-publish-helm:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  image: alpine/helm:latest
  dependencies:
    - build-publish-image
  script:
    - wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq && chmod +x ./yq
    - echo $VERSION
    # Extraire le domaine de API_URL_ENDPOINT
    - DOMAIN=$(echo $API_URL_ENDPOINT | awk -F[/:] '{print $4}')
    - 'echo "Extracted DOMAIN: $DOMAIN"'
    # Modifier le fichier values.yaml
    - ls
    - ./yq -i ".ingress.hosts[0].host=\"$DOMAIN\"" helm/api/values.yaml
    - ./yq -i ".name=\"$CHART_NAME\"" helm/api/Chart.yaml
    # Vérifier le contenu de values.yaml après modification
    - cat helm/api/values.yaml
    - helm package helm/api --version $VERSION --app-version $VERSION
    - 'curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form "chart=@$CHART_NAME-$VERSION.tgz" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/$DEPLOY_VARIABLE/charts"'
  environment:
    name: $DEPLOY_VARIABLE
