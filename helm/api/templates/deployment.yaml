apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "beep-backend-files.fullname" . }}
  labels:
    {{- include "beep-backend-files.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "beep-backend-files.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "beep-backend-files.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.image.port }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ .Values.image.configMapName }}
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.servicesReleaseName }}-postgresql
                  key: postgres-password
            - name: S3_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.servicesReleaseName }}-minio
                  key: root-user
            - name: S3_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.servicesReleaseName }}-minio
                  key: root-password
            - name: SMTP_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.image.smtpSecretName }}
                  key: host
            - name: SMTP_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.image.smtpSecretName }}
                  key: port
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.image.smtpSecretName }}
                  key: username
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.image.smtpSecretName }}
                  key: password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.servicesReleaseName }}-redis
                  key: redis-password

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "node ace migration:run --force"]
